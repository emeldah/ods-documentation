#
msgid ""
msgstr ""
"Project-Id-Version: OpenDataSoft Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-29 17:52+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:2
msgid "Extract Text processor"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:4
msgid ""
"This processor allows to extract any part of a text, a number or a "
"combination of both into a new column. It's similar to the Replace via "
"Regexp processor, except that instead of replacing the content in the same "
"original column, a new column is created with the extracted text. The idea "
"is indeed to put the part to extract in parentheses. This part will then be "
"extracted in a new column."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:7
msgid "Setting the processor"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:9
msgid ""
"To set the parameters of the Extract Text processor, follow the indications "
"from the table below."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:14
msgid "Label"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:15
msgid "Description"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:16
msgid "Mandatory"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:17
msgid "Field"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:18
msgid "Field which contains the value(s) to extract"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:19
#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:22
msgid "yes"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:20
msgid "Regular expression"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:21
msgid ""
"Regular expression to determine which part of the values will be extracted. "
"See `<http://en.wikipedia.org/wiki/Regular_expression>`_ for more details on"
" how to write a regular expressions. It is also possible to test regular "
"expressions with an online debugger tool like `Regex101 "
"<https://regex101.com/>`_."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:25
msgid "Example"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:27
msgid ""
"Using the same example as for the Replace via Regexp processor (from a "
"French zip code like 44100, keep only the area code 44), the Extract Text "
"processor can be used to create another column with the area code selected, "
"instead of replacing the content like with the Replace via Regexp processor."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:34
msgid ""
"In this example, we use the pattern ``(?P<area>[0-9]{2})[0-9]{3}``. "
"``[0-9]`` means any digit, and ``{2}`` or ``{3}`` means the number of digits"
" we are looking for. In this case we want to extract the first two digits, "
"so we put them in parenthesis, then after the parenthesis we put the rest of"
" the sequence that we don't want to extract, here the remaining 3 digits. "
"The special expression ``?P<area>`` is just for specifying the new column "
"name"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:43
msgid ""
"From a more technical point of view, this processor can be used to extract "
"an arbitrary pattern expressed as a regular expression out of a string using"
" sub matching."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:45
msgid ""
"The syntax of the sub-matching expression to specify is the following: "
"``(?P<NAME>REGEXP)``. Where:"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:47
msgid ""
"``NAME`` is the name of a new field which will receive the result of the "
"extraction. This field name can only contain letters, numbers and "
"underscores (special characters like accentuated letters or commas are not "
"allowed)."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:48
msgid "``REXGEXP`` is the submatch expression"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:50
msgid ""
"For example, let's assume that you want to extract a street name out of an "
"address. That is, for the address"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:56
msgid ""
"you might want to extract the value ``Pennsylvania Ave NW`` in a field  "
"``street_name``."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:58
msgid "You would have to write the following expression:"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/extract_text.rst:64
msgid ""
"And if you want to extract the street number in a field ``street_number``, "
"simply extend the previous expression:"
msgstr ""
