#
msgid ""
msgstr ""
"Project-Id-Version: OpenDataSoft Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-29 17:52+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:2
msgid "Expand JSON array processor"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:4
msgid ""
"This processor transposes rows containing a JSON array into several rows "
"with a new column containing each value of the array."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:7
msgid "Setting the processor"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:9
msgid ""
"The parameter \"iJSON rule to array\" works exactly like in the \"Extract "
"from JSON\" processor and should contain the array to transpose (represented"
" with the iJSON rule ``.item``)."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:11
msgid ""
"If the field contains the JSON array directly, just put ``item`` as an iJSON"
" rule."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:12
msgid ""
"If the final element is an array, the iJSON rule must end with ``.item``, "
"meaning that the reached object should be treated as an array of items in "
"the iJSON syntax."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:13
msgid ""
"If you want to keep going into the items inside the array, you can keep "
"adding key names after the ``.item``, but be careful to check that this path"
" is valid for every object in the array."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:15
msgid ""
"To set the parameters of the Expand JSON array processor, follow the "
"indications from the table below."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:20
msgid "Label"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:21
msgid "Description"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:22
#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:34
msgid "Example"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:23
msgid "JSON array field"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:24
msgid "Name of the field that holds the JSON array"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:25
msgid "data"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:26
msgid "iJSON rule to array"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:27
msgid ""
"iJSON rule to iterate in the JSON array above. An iJSON rule is built with "
"the names of all the field from the JSON root to the data to extract, "
"separated with a dot."
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:28
msgid "block.metaB"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:29
msgid "Output field"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:30
msgid "Name of the field that will contain the extracted element"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:36
msgid "iJSON rules to extract from the following JSON array field:"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:53
msgid ""
"``item`` will transpose the record into 2, one with each object of the array"
" in the \"Output field\" column"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:74
msgid ""
"``bloc.item`` will transpose the record into 2, one with each object of the "
"array in the \"Output field\" column"
msgstr ""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:75
msgid ""
"``bloc.item.sub`` will transpose the record into 2, one with each object "
"inside the \"sub\" tag of each object of the array."
msgstr ""
